---

version: '2.4'

services:
  nginx:
    container_name: test_nginx
    hostname: test-nginx
    image: nginx:stable
    depends_on:
      - php-fpm
    mem_limit: 1g
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    labels:
      traefik.enable: "true"
      traefik.http.services.test-nginx-80.loadbalancer.server.port: "80"
      traefik.http.routers.test-nginx-http.entrypoints: "http"
      traefik.http.routers.test-nginx-http.rule: "Host(`test.localhost`)"
      traefik.http.routers.test-nginx-http.service: "test-nginx-80"
    networks:
      test_network:
        aliases:
          - test.localhost
    volumes:
      - ./docker/nginx/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/etc/nginx/conf.d/:/etc/nginx/conf.d/:ro
      - ./:/project/:ro,delegated
    restart: "no"
    ports:
      - "80:80"

  php-fpm:
    container_name: test_php-fpm
    hostname: test-php-fpm
    image: php:test
    build:
      context: .
      dockerfile: dockerfiles/php
      target: dev
      labels:
        project: test
    depends_on:
      - postgresql
    mem_limit: 8g
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    networks:
      test_network:
        aliases:
          - test-php-fpm
    volumes:
      - ./docker/php/usr/local/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./docker/php/usr/local/etc/php-fpm.d/:/usr/local/etc/php-fpm.d/:ro
      - ./:/project/:delegated
    env_file:
      - ./my.env
    environment:
      COMPOSER_HOME: /project/.composer
    command: >
      /bin/bash -c "umask 0002
      && php-fpm
      "
    restart: "no"

  postgresql:
    container_name: test_postgresql
    hostname: test-postgresql
    image: postgresql:test
    build:
      context: .
      dockerfile: dockerfiles/postgresql
      target: dev
      labels:
        project: test
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    networks:
      test_network:
        aliases:
          - test-postgresql
    ports:
      - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql/data/
    restart: "no"

networks:
  test_network:
    external: true

volumes:
  postgresql:
